mysql_init:
  image:
    repository: monasca/mysql-init
    tag: 1.1.0
    pullPolicy: IfNotPresent
  disable_remote_root: true
  randon_password: true
  host: mysql
  port: 3306
  username: root
  password: secretmysql

influx_init:
  image:
    repository: monasca/influxdb-init
    tag: latest
    pullPolicy: IfNotPresent

grafana_init:
  image:
    repository: monasca/grafana-init
    tag: latest
    pullPolicy: IfNotPresent
  log_level: INFO
  url: http://grafana:3000
  username: mini-mon
  password: password
  datasource:
    type: monasca
    url: http://monasca:8070/
    access_mode: proxy

influxdb:
  ## influxdb image version
  ## ref: https://hub.docker.com/r/library/influxdb/tags/
  image:
    repo: "influxdb"
    tag: "1.1"
    pullPolicy: IfNotPresent

  ## Specify a service type
  ## NodePort is default
  ## ref: http://kubernetes.io/docs/user-guide/services/
  service:
    type: NodePort

  ## Persist data to a persitent volume
  persistence:
    enabled: false
    storageClass: gluster-heketi # Set to storage being used
    accessMode: ReadWriteOnce
    size: 100Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
    limits:
      memory: 16Gi
      cpu: 8

mysql:
  ## mysql image version
  ## ref: https://hub.docker.com/r/library/mysql/tags/
  ##
  imageTag: "5.6"

  ## Specify password for root user
  ##
  ## Default: random 10 character string
  mysqlRootPassword: "secretmysql"

  ## Create a database
  ##
  mysqlDatabase: "mon"

  ## Specify an imagePullPolicy (Required)
  ## It's recommended to change this to 'Always' if the image tag is 'latest'
  ## ref: http://kubernetes.io/docs/user-guide/images/#updating-images
  ##
  imagePullPolicy: IfNotPresent

  ## Persist data to a persitent volume
  persistence:
    enabled: false
    storageClass: gluster-heketi
    accessMode: ReadWriteOnce
    size: 10Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
